#! /usr/bin/env bash

make get-keys 1> /dev/null
make import-keys 1> /dev/null

export dsusekeyring="--keyring=$HOME/.gnupg/repokeys.gpg"

if [ "$nonfree" = "yes" ]; then
        export non_free='-nonfree'
        export nosource='--apt-source-archives false'
        export components='--components="main contrib non-free"'
        export archiveareas='--archive-areas "main,contrib,non-free"'
fi

if [ "$hardened" = "yes" ]; then
        export harden='-k grsec-amd64'
        export is_harden="-hardened"
fi


export useproxy=$( [ ! -z "$proxy_addr" ] && echo "--apt-http-proxy $proxy_addr" || echo "" )

if [ -z "$proxy_addr" ]; then
        export proxy_addr="http:/"
fi

export customized=$( [ ! -z "$customize" ] && echo "-custom" || echo "" )
export serverdist=$( [ ! -z "$server" ] && echo "-server" || echo "" )


if [ "$distro" = "debian" ]; then
        export mirror="$proxy_addr/ftp.us.debian.org/debian"
        export unstable="sid"
        export stable="sid"
        export bootstrapopts="--merged-usr $dsusekeyring --variant=minbase --include=gnupg2,gnutls-bin,apt-transport-https,ca-certificates $components"
        export usekeyring="--keyring-packages debian-keyring,debian-archive-keyring"
elif [ "$distro" = "devuan" ]; then
        export mirror="$proxy_addr/us.mirror.devuan.org/merged"
        export unstable="stable"
        export stable="stable"
        export bootstrapopts="--merged-usr $dsusekeyring --variant=minbase --include=busybox-syslogd,gnupg2,gnutls-bin,apt-transport-https,ca-certificates,live-config-sysvinit --exclude=systemd,systemd-sysv $components"
        export usekeyring="--keyring-packages devuan-keyring"
elif [ "$distro" = "ubuntu" ]; then
        export mirror="$proxy_addr/archive.ubuntu.com/ubuntu"
        export unstable="artful"
        export stable="artful"
        export bootstrapopts="--merged-usr $dsusekeyring --include=gnupg2,apt-transport-https,ca-certificates --exclude=debian-archive-keyring $components"
        export components=$( [ ! -z "$nonfree" ] && echo "--components=\"main,restricted,universe,multiverse\"" || echo "" )
        export archiveareas=$( [ ! -z "$nonfree" ] && echo "--archive-areas \"main,restricted,universe,multiverse\"" || echo "" )
        export usekeyring="--keyring-packages ubuntu-archive-keyring"
        export distromode="--mode ubuntu"
fi

if [ ! -z "$components" ]; then
        echo "WARNING: USING NON-FREE COMPONENTS! $components"
        echo "$archiveareas"
fi
        echo "$mirror"
        echo "$unstable"
        echo "$stable"
        echo "$bootstrapopts"
        echo "$usekeyring"
        echo "$distromode"
sleep 5

lb config noauto \
    -b iso-hybrid \
    --debian-installer live \
    --system live \
    $useproxy \
    $usekeyring \
    -d "$stable" \
    --updates no \
    --parent-distribution "$unstable" \
    --debootstrap-options "$bootstrapopts" \
    --initsystem sysvinit \
    $archiveareas \
    $nosource \
    $harden \
    --image-name "$image_prename-$distro" \
    $distromode \
    --security false \
    --parent-mirror-bootstrap "$mirror" \
    --parent-mirror-binary "$mirror" \
    --parent-mirror-binary-security "$mirror" \
    --parent-mirror-chroot "$mirror" \
    --parent-mirror-chroot-security "$mirror" \
    --mirror-bootstrap "$mirror" \
    --mirror-binary "$mirror" \
    --mirror-binary-security "$mirror" \
    --mirror-chroot "$mirror" \
    --mirror-chroot-security "$mirror" \
    --security false \
    --verbose
    "$@" \


make libre 1> /dev/null

if [ "$distro" = "devuan" ]; then
        make devuan-key 1> /dev/null
elif [ "$distro" = "ubuntu" ]; then
        make libre-ubuntu 1> /dev/null
fi

if [ "$hardened" = "yes" ]; then
        make permissive-user 1> /dev/null
else
        make easy-user 1> /dev/null
fi

if [ "$nonfree" = "yes" ]; then
        make unfree 1> /dev/null
        make nonfree-firmware 1> /dev/null
fi
if [ ! -z "$customize" ]; then
        make custom 1> /dev/null
fi

make skel 1> /dev/null
make packages 1> /dev/null

if [ ! -z "$server" ]; then
        make server-packages 1> /dev/null
fi

echo "$distro"
